# This file is a template, and might need editing before it works on your project.
# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle
image: gradle:alpine
stages:
- build
- test
- merge-request-only-build
- merge-train-only-build




# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
test:
  stage: test
  script: gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
merge-train-only-build:
  stage: merge-train-only-build
  script:
  - echo "============================== Merge Build =============================="
  - gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  only:
    refs:
    - merge_requests
    variables:
    - $CI_MERGE_REQUEST_EVENT_TYPE == "merge_train"


merge-request-only-build:
  stage: merge-request-only-build
  script:
  - echo "============================== Merge Build =============================="
  - gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  only:
    refs:
    - merge_requests
    variables:
    - $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"


